# k8s/appointments-stack.yaml
# ------------------------------------------------------------
# Полный минимальный стек: PostgreSQL + API + Ingress
# Пример развёртывания в namespace "appointments".
# ------------------------------------------------------------

apiVersion: v1
kind: Namespace
metadata:
  name: appointments
---
# ---------- Секреты ----------
apiVersion: v1
kind: Secret
metadata:
  name: pg-secret
  namespace: appointments
type: Opaque
stringData:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: appointments
---
# ---------- PostgreSQL ----------
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pg
  namespace: appointments
spec:
  serviceName: pg
  replicas: 1
  selector:
    matchLabels:
      app: pg
  template:
    metadata:
      labels:
        app: pg
    spec:
      containers:
        - name: postgres
          image: postgres:15-alpine
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: pg-secret
          volumeMounts:
            - name: pg-data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: pg-data
      spec:
        accessModes: [ReadWriteOnce]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: pg
  namespace: appointments
spec:
  ports:
    - port: 5432
  selector:
    app: pg
---
# ---------- ConfigMap для API ----------
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-config
  namespace: appointments
data:
  DATABASE_URL: postgresql://postgres:postgres@pg:5432/appointments
---
# ---------- API Deployment ----------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: appointments-api
  namespace: appointments
spec:
  replicas: 2
  selector:
    matchLabels:
      app: appointments-api
  template:
    metadata:
      labels:
        app: appointments-api
    spec:
      containers:
        - name: api
          image: ghcr.io/<your-org>/appointments:latest   # ← замените на свой
          ports:
            - containerPort: 8000
          envFrom:
            - configMapRef:
                name: api-config
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: appointments-api
  namespace: appointments
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8000
  selector:
    app: appointments-api
---
# ---------- Ingress ----------
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: appointments-ingress
  namespace: appointments
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: appointments.local    # замените на свой домен
      http:
        paths:
          - path: /(.*)
            pathType: Prefix
            backend:
              service:
                name: appointments-api
                port:
                  number: 80
